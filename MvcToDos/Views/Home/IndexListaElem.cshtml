@using MvcToDos.Models
@model ITeendo
@{
    var allapotid = "Teendo_" + Model.Id;
}
@if (Model is Teendo)
{
    var m = (Teendo) Model;
    <span class="Szoveg">@m.Szoveg</span>
}

@if (Model is TeendoLista)
{
    var m = (TeendoLista)Model;
    <span class="TeendoLista">
        @Html.Partial("TeendoLista", m)
    </span>
}
<div class="Muveletek">
    <span class="Done">
        @Ajax.ActionLink(Model.Allapot ? "Nem kész" : "Kész", "Edit", new { id = Model.Id, allapot = !Model.Allapot }, new AjaxOptions()
        {
            HttpMethod = "post",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = allapotid,
            OnSuccess = "Edit.onSucces(" + allapotid + ")"
        })
    </span>
    <span class="Delete">
        @Ajax.ActionLink("Törlés", "Delete", new { id = Model.Id }, new AjaxOptions()
        {
            HttpMethod = "post",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "IndexLista"
        })
    </span>
</div>
<div class="Adatok">
    <div class="Fontossag">
        @Html.LabelFor(model => model.Fontossag)
        @Model.Fontossag.ToUI()
    </div>
    <div class="Hatarido">
        @Html.LabelFor(model => model.Hatarido)
        @Model.HataridoToString()
    </div>
    @if (Model.SzinKod != null)
    {
        <div class="Szinkod">
            @Html.LabelFor(model => model.SzinKod)
            <div style="background-color: @Model.SzinKod" class="Adat"></div>
        </div>
    }

</div>

